mov r4, r6 => r6 = r4
1. t6 = t4

ld.w n[r3], r5 => r5 = word [r3 + n]
2. t3 = ptr(mem(n: t5))

xor r2a, r1b, r1c => r1c = r2a ^ r1b
3. t2a = int && t1b = int && r1c = int

add r2a, r1b, r1c => r1c = r2a + r1b
4. t2a = ptr(t) && t1b = int && t1c = ptr(t)
|| t2a = int && t1b = ptr(t') && t1c = ptr(t')
|| t2a = int && t1b = int && t1c = int

ld.w (r5)[r0], r3 => r3 = word [r0 + r5] (array access)
5. t0 = ptr(array(t3)) && t5 = int
|| t0 = int && t5 = ptr(array(t3))

mov 42, r7
6. t7 = int

mov 0, r7
7. t7 = int || t7 = ptr(t)


